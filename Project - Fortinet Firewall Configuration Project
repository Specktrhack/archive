Harika bir istek! Fortinet projenizin raporunu, istenen t√ºm detaylarla birlikte profesyonel bir proje diliyle ƒ∞ngilizce'ye √ßevirip GitHub formatƒ±nda hazƒ±rladƒ±m.

ƒ∞≈üte projenizin enerjik ve dikkat √ßekici sunumu:

üõ°Ô∏è Fortinet Firewall Infrastructure Project üöÄ
A Comprehensive Security Architecture for a Corporate Network

Participant Name: Haydar Can Kotanoglu 



Training Institution: Oak Academy 


Project Duration: May 22 - 25, 2025 


Project Subject: Firewall Project 

üéØ Project Aims
The primary objective of this project, executed in the role of a Security Engineer for OAKLAB Academy, was to design and implement a layered, comprehensive security architecture on a 

Fortinet Firewall for a simulated corporate network infrastructure.

The key goals were structured as follows:

üåê Network Segmentation & Controlled Access
To establish distinct network segments: 

LAN1, LAN2, and a DMZ.

To enforce strict security policies governing traffic flow between these segments and to/from the internet.

üîê Specific Protocol Permissions
To permit only 

SSH and ICMP traffic between the designated Linux devices.

To permit only 

RDP traffic between the designated Windows devices.

üõ†Ô∏è Service Deployment & Secure Publishing
To install an 

OpenSSH Server on the Windows machine, creating an alternative secure management channel to RDP.

To deploy an 

Apache Web Server on the Linux machine, configuring it to serve content across multiple ports (80, 8080, 9090).

üó∫Ô∏è Advanced NAT & Port Forwarding
To implement 

Port Forwarding using a Virtual IP (VIP), redirecting external requests on port 8080 to the internal Apache web server.

To enable Network Address Translation (NAT) for all outbound traffic from the internal network to the WAN.

üõ°Ô∏è Advanced Security Profile Integration

Application Control: Block specific applications, including Facebook, Gmail, and Skype.


Web Filtering: Block undesirable website categories (e.g., "Adult/Mature Content") and specific URLs like facebook.com.


Antivirus: Scan all network traffic for malware and prevent the download of known test viruses (EICAR).


Intrusion Prevention System (IPS): Scan network traffic against known attack signatures to block critical and high-level threats.


File Filtering: Block the transfer of specific file extensions (e.g., .zip) over the network.

üîé DNS Configuration & Filtering

DNS Filtering: Intercept DNS queries for a specific domain (example.com) and redirect the traffic to a server within the DMZ.


Local DNS Server: Set up a DNS server in the DMZ to resolve a custom domain (grad1.grad1.com) to the internal web server's private IP.

üìà Logging & Verification
To provide text-based proof and verification for every configuration and policy action using detailed log records and CLI outputs.

‚úÖ Project Achievements
All project objectives were successfully accomplished. Each configuration was meticulously implemented and verified with text-based evidence from logs and command-line outputs.


Core Network Access Policies - Successfully Deployed!
‚úÖ 

Linux-to-Linux Traffic: Bidirectional SSH and ICMP traffic was exclusively permitted between the Linux devices (Lan1_Linux, Lan2_Linux) under Policy ID: 12. This was confirmed via FortiGate logs showing successful SSH from 

hybrid2 (10.212.136.102) to 10.10.5.3.

‚úÖ 

Windows-to-Windows Traffic: Bidirectional RDP traffic was exclusively permitted between Windows devices (Lan1_Win10, Lan2_Win10) under Policy ID: 33. Logs confirmed successful RDP connections from 

10.10.5.2 to 10.1.10.2.

‚úÖ 

NAT Implementation: NAT was correctly enabled for internet-bound traffic while being disabled for internal LAN-to-LAN traffic to allow direct communication.

Service Deployments & Access - Fully Operational!
‚úÖ 

OpenSSH on Windows: The OpenSSH service was activated on the Windows machine (10.10.5.3), a firewall rule was added for port 22 using New-NetFirewallRule, and a successful connection was established using ssh std@10.10.5.2.

‚úÖ 

Apache on Linux: The Apache server was configured via ports.conf to listen on ports 80, 8080, and 9090. The "It works!" page was successfully accessed from LAN1, and Apache's 

access.log recorded the GET request from 10.10.5.2.

‚úÖ 

Port Forwarding with VIP: A Virtual IP object (Group1_VIP) was created to successfully forward requests from 10.10.5.1:8080 to the internal web server at 192.168.1.3:8080.

Advanced Security & Filtering - Now Active!
‚úÖ 

Implicit Deny: The default deny rule was proven effective by blocking NTP traffic from 192.168.1.3 to 185.125.190.58 with a Policy ID: Implicit Deny log entry.

‚úÖ 

Application Control: The APP Block Facebook-Gmail-Skype profile successfully blocked 31 signatures related to these apps for LAN2's outbound traffic.

‚úÖ 

Web Filtering: The HB_Company-WebFilter-Policy successfully blocked the "Adult/Mature Content" category and facebook.com for LAN1, resulting in a "Web Page Blocked" message.

‚úÖ 

Antivirus: An attempt to download the EICAR test virus was successfully blocked by the Group1_eicar_bloc profile, triggering a security alert in the browser.

‚úÖ 

IPS: The Group1_IPS_Log_Mod√ºl profile was activated to block critical and high-severity threats on internal traffic.

‚úÖ 

File Filtering: A test to transfer a .zip file via HTTP was successfully blocked, resulting in a "Couldn't download - Network issue" error.

DMZ & DNS Configurations - Perfectly Executed!
‚úÖ 

DNS Filtering: DNS queries for example.com were successfully intercepted and redirected to the IIS web server (10.1.10.2) in the DMZ. 

nslookup confirmed the IP resolution, and the browser displayed the IIS welcome page.

‚úÖ 

Local DNS Server: An A record for grad1.grad1.com was created on the DMZ DNS server, pointing to the Linux web server (192.168.1.3). 

nslookup resolved the correct IP, and the browser displayed the Apache homepage.

üèÅ Unrealized Targets

None. All targets outlined in the project plan were successfully completed and validated. As detailed in the Project Achievements section, all fundamental and advanced configurations were fully implemented, leaving no unrealized objectives for this project.

üìú Disclosures

Project Context: This report was created within the OAKLAB Academy framework to provide a Security Engineer's perspective on configuring a realistic corporate security infrastructure with a Fortinet Firewall.


Methodology: To showcase technical depth, this report exclusively uses text-based evidence (logs, CLI outputs, configs) instead of screenshots, demonstrating a command of the underlying technical details.

Final Outcome: The project successfully culminated in the creation of a comprehensive, multi-layered security infrastructure. It effectively demonstrates a robust security posture through network segmentation, granular access control, and advanced threat prevention. This document serves as a transparent record of all configurations and their verification steps.
